plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace 'com.cailloutr.rightnewscompose'
    compileSdk 33

    defaultConfig {
        applicationId "com.cailloutr.rightnewscompose"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.cailloutr.rightnewscompose.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "API_KEY", "\"${properties.getProperty("API_KEY")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources.merges.add("META-INF/NOTICE.md")
        resources.merges.add("META-INF/LICENSE.md")
        resources.merges.add("META-INF/LICENSE-notice.md")
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.2.0-alpha01'
    implementation "androidx.compose.material:material:1.4.3"
    implementation 'com.google.android.material:material:1.9.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha09"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"
    implementation "androidx.tracing:tracing:1.1.0"


    // Html text composable
    implementation 'com.github.ireward:compose-html:1.0.2'

    // System bars customization
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"

    // Navigation
    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'


    // Room
    implementation("androidx.room:room-runtime:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    // Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // Coil
    implementation("io.coil-kt:coil-compose:$coil_version")

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    // Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    // Ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "ch.qos.logback:logback-classic:1.2.3"


    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation("com.google.truth:truth:$google_truth_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    testImplementation("androidx.arch.core:core-testing:2.2.0")
    testImplementation "io.mockk:mockk-android:${mockkVersion}"
    testImplementation "io.mockk:mockk-agent:${mockkVersion}"
    testImplementation 'app.cash.turbine:turbine:0.12.1'
    testImplementation("androidx.room:room-testing:$room_version")

    androidTestImplementation "junit:junit:4.13.2"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
    androidTestImplementation 'com.google.truth:truth:1.1.3'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    /*androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"*/

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation 'app.cash.turbine:turbine:0.12.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$rootProject.nav_version"


    androidTestImplementation "io.mockk:mockk-android:${mockkVersion}"
    androidTestImplementation "io.mockk:mockk-agent:${mockkVersion}"

    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")

    debugImplementation "androidx.compose.ui:ui-test-manifest:$rootProject.compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}